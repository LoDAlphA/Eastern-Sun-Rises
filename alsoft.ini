# OpenAL config file.
#
# Option blocks may appear multiple times, and duplicated options will take the
# last value specified. Environment variables may be specified within option
# values, and are automatically substituted when the config file is loaded.
# Environment variable names may only contain alpha-numeric characters (a-z,
# A-Z, 0-9) and underscores (_), and are prefixed with $. For example,
# specifying "$HOME/file.ext" would typically result in something like
# "/home/user/file.ext". To specify an actual "$" character, use "$$".
#
# Device-specific values may be specified by including the device name in the
# block name, with "general" replaced by the device name. That is, general
# options for the device "Name of Device" would be in the [Name of Device]
# block, while ALSA options would be in the [alsa/Name of Device] block.
# Options marked as "(global)" are not influenced by the device.
#
# The system-wide settings can be put in /etc/openal/alsoft.conf and user-
# specific override settings in $HOME/.alsoftrc.
# For Windows, these settings should go into $AppData\alsoft.ini
#
# Option and block names are case-senstive. The supplied values are only hints
# and may not be honored (though generally it'll try to get as close as
# possible). Note: options that are left unset may default to app- or system-
# specified values. These are the current available settings:

##
## General stuff
##
[general]

## disable-cpu-exts: (global)
#  Disables use of specialized methods that use specific CPU intrinsics.
#  Certain methods may utilize CPU extensions for improved performance, and
#  this option is useful for preventing some or all of those methods from being
#  used. The available extensions are: sse, sse2, sse3, sse4.1, and neon.
#  Specifying 'all' disables use of all such specialized methods.
#disable-cpu-exts =

## drivers: (global)
#  Sets the backend driver list order, comma-seperated. Unknown backends and
#  duplicated names are ignored. Unlisted backends won't be considered for use
#  unless the list is ended with a comma (e.g. 'oss,' will try OSS first before
#  other backends, while 'oss' will try OSS only). Backends prepended with -
#  won't be considered for use (e.g. '-oss,' will try all available backends
#  except OSS). An empty list means to try all backends.
drivers="wasapi"

## channels:
#  Sets the output channel configuration. If left unspecified, one will try to
#  be detected from the system, and defaulting to stereo. The available values
#  are: mono, stereo, quad, surround51, surround51rear, surround61, surround71,
#  ambi1, ambi2, ambi3. Note that the ambi* configurations provide ambisonic
#  channels of the given order (using ACN ordering and SN3D normalization by
#  default), which need to be decoded to play correctly on speakers.
#channels =

## sample-type:
#  Sets the output sample type. Currently, all mixing is done with 32-bit float
#  and converted to the output sample type as needed. Available values are:
#  int8    - signed 8-bit int
#  uint8   - unsigned 8-bit int
#  int16   - signed 16-bit int
#  uint16  - unsigned 16-bit int
#  int32   - signed 32-bit int
#  uint32  - unsigned 32-bit int
#  float32 - 32-bit float
#sample-type = float32

## frequency:
#  Sets the output frequency. If left unspecified it will try to detect a
#  default from the system, otherwise it will default to 44100.
#frequency =

## period_size:
#  Sets the update period size, in sample frames. This is the number of frames
#  needed for each mixing update. Acceptable values range between 64 and 8192.
#  If left unspecified it will default to 1/50th of the frequency (20ms, or 882
#  for 44100, 960 for 48000, etc).
#period_size =

## periods:
#  Sets the number of update periods. Higher values create a larger mix ahead,
#  which helps protect against skips when the CPU is under load, but increases
#  the delay between a sound getting mixed and being heard. Acceptable values
#  range between 2 and 16.
#periods = 3

## stereo-mode:
#  Specifies if stereo output is treated as being headphones or speakers. With
#  headphones, HRTF or crossfeed filters may be used for better audio quality.
#  Valid settings are auto, speakers, and headphones.
#stereo-mode = auto

## stereo-encoding:
#  Specifies the encoding method for non-HRTF stereo output. 'panpot' (default)
#  uses standard amplitude panning (aka pair-wise, stereo pair, etc) between
#  -30 and +30 degrees, while 'uhj' creates stereo-compatible two-channel UHJ
#  output, which encodes some surround sound information into stereo output
#  that can be decoded with a surround sound receiver. If crossfeed filters are
#  used, UHJ is disabled.
#stereo-encoding = panpot

## ambi-format:
#  Specifies the channel order and normalization for the "ambi*" set of channel
#  configurations. Valid settings are: fuma, ambix (or acn+sn3d), acn+n3d
#ambi-format = ambix

## hrtf:
#  Controls HRTF processing. These filters provide better spatialization of
#  sounds while using headphones, but do require a bit more CPU power. While
#  HRTF is used, the cf_level option is ignored. Setting this to auto (default)
#  will allow HRTF to be used when headphones are detected or the app requests
#  it, while setting true or false will forcefully enable or disable HRTF
#  respectively.
#hrtf = auto

## hrtf-mode:
#  Specifies the rendering mode for HRTF processing. Setting the mode to full
#  (default) applies a unique HRIR filter to each source given its relative
#  location, providing the clearest directional response at the cost of the
#  highest CPU usage. Setting the mode to ambi1, ambi2, or ambi3 will instead
#  mix to a first-, second-, or third-order ambisonic buffer respectively, then
#  decode that buffer with HRTF filters. Ambi1 has the lowest CPU usage,
#  replacing the per-source HRIR filter for a simple 4-channel panning mix, but
#  retains full 3D placement at the cost of a more diffuse response. Ambi2 and
#  ambi3 increasingly improve the directional clarity, at the cost of more CPU
#  usage (still less than "full", given some number of active sources).
#hrtf-mode = full

## hrtf-size:
#  Specifies the impulse response size, in samples, for the HRTF filter. Larger
#  values increase the filter quality, while smaller values reduce processing
#  cost. A value of 0 (default) uses the full filter size in the dataset, and
#  the default dataset has a filter size of 32 samples at 44.1khz.
#hrtf-size = 0

## default-hrtf:
#  Specifies the default HRTF to use. When multiple HRTFs are available, this
#  determines the preferred one to use if none are specifically requested. Note
#  that this is the enumerated HRTF name, not necessarily the filename.
#default-hrtf =

## hrtf-paths:
#  Specifies a comma-separated list of paths containing HRTF data sets. The
#  format of the files are described in docs/hrtf.txt. The files within the
#  directories must have the .mhr file extension to be recognized. By default,
#  OS-dependent data paths will be used. They will also be used if the list
#  ends with a comma. On Windows this is:
#  $AppData\openal\hrtf
#  And on other systems, it's (in order):
#  $XDG_DATA_HOME/openal/hrtf  (defaults to $HOME/.local/share/openal/hrtf)
#  $XDG_DATA_DIRS/openal/hrtf  (defaults to /usr/local/share/openal/hrtf and
#                               /usr/share/openal/hrtf)
#hrtf-paths =

## cf_level:
#  Sets the crossfeed level for stereo output. Valid values are:
#  0 - No crossfeed
#  1 - Low crossfeed
#  2 - Middle crossfeed
#  3 - High crossfeed (virtual speakers are closer to itself)
#  4 - Low easy crossfeed
#  5 - Middle easy crossfeed
#  6 - High easy crossfeed
#  Users of headphones may want to try various settings. Has no effect on non-
#  stereo modes.
#cf_level = 0

## resampler: (global)
#  Selects the default resampler used when mixing sources. Valid values are:
#  point - nearest sample, no interpolation
#  linear - extrapolates samples using a linear slope between samples
#  cubic - extrapolates samples using a Catmull-Rom spline
#  bsinc12 - extrapolates samples using a band-limited Sinc filter (varying
#            between 12 and 24 points, with anti-aliasing)
#  fast_bsinc12 - same as bsinc12, except without interpolation between down-
#                 sampling scales
#  bsinc24 - extrapolates samples using a band-limited Sinc filter (varying
#            between 24 and 48 points, with anti-aliasing)
#  fast_bsinc24 - same as bsinc24, except without interpolation between down-
#                 sampling scales
#resampler = linear

## rt-prio: (global)
#  Sets real-time priority for the mixing thread. Not all drivers may use this
#  (eg. PortAudio) as they already control the priority of the mixing thread.
#  0 and negative values will disable it. Note that this may constitute a
#  security risk since a real-time priority thread can indefinitely block
#  normal-priority threads if it fails to wait. Disable this if it turns out to
#  be a problem.
#rt-prio = 1

## sources:
#  Sets the maximum number of allocatable sources. Lower values may help for
#  systems with apps that try to play more sounds than the CPU can handle.
#sources = 256

## slots:
#  Sets the maximum number of Auxiliary Effect Slots an app can create. A slot
#  can use a non-negligible amount of CPU time if an effect is set on it even
#  if no sources are feeding it, so this may help when apps use more than the
#  system can handle.
#slots = 64

## sends:
#  Limits the number of auxiliary sends allowed per source. Setting this higher
#  than the default has no effect.
#sends = 6

## front-stablizer:
#  Applies filters to "stablize" front sound imaging. A psychoacoustic method
#  is used to generate a front-center channel signal from the front-left and
#  front-right channels, improving the front response by reducing the combing
#  artifacts and phase errors. Consequently, it will only work with channel
#  configurations that include front-left, front-right, and front-center.
#front-stablizer = false

## output-limiter:
#  Applies a gain limiter on the final mixed output. This reduces the volume
#  when the output samples would otherwise clamp, avoiding excessive clipping
#  noise.
#output-limiter = true

## dither:
#  Applies dithering on the final mix, for 8- and 16-bit output by default.
#  This replaces the distortion created by nearest-value quantization with low-
#  level whitenoise.
#dither = true

## dither-depth:
#  Quantization bit-depth for dithered output. A value of 0 (or less) will
#  match the output sample depth. For int32, uint32, and float32 output, 0 will
#  disable dithering because they're at or beyond the rendered precision. The
#  maximum dither depth is 24.
#dither-depth = 0

## volume-adjust:
#  A global volume adjustment for source output, expressed in decibels. The
#  value is logarithmic, so +6 will be a scale of (approximately) 2x, +12 will
#  be a scale of 4x, etc. Similarly, -6 will be x1/2, and -12 is about x1/4. A
#  value of 0 means no change.
#volume-adjust = 0

## excludefx: (global)
#  Sets which effects to exclude, preventing apps from using them. This can
#  help for apps that try to use effects which are too CPU intensive for the
#  system to handle. Available effects are: eaxreverb,reverb,autowah,chorus,
#  compressor,distortion,echo,equalizer,flanger,modulator,dedicated,pshifter,
#  fshifter,vmorpher.
#excludefx =

## default-reverb: (global)
#  A reverb preset that applies by default to all sources on send 0
#  (applications that set their own slots on send 0 will override this).
#  Available presets are: None, Generic, PaddedCell, Room, Bathroom,
#  Livingroom, Stoneroom, Auditorium, ConcertHall, Cave, Arena, Hangar,
#  CarpetedHallway, Hallway, StoneCorridor, Alley, Forest, City, Moutains,
#  Quarry, Plain, ParkingLot, SewerPipe, Underwater, Drugged, Dizzy, Psychotic.
#default-reverb =

## trap-alc-error: (global)
#  Generates a SIGTRAP signal when an ALC device error is generated, on systems
#  that support it. This helps when debugging, while trying to find the cause
#  of a device error. On Windows, a breakpoint exception is generated.
#trap-alc-error = false

## trap-al-error: (global)
#  Generates a SIGTRAP signal when an AL context error is generated, on systems
#  that support it. This helps when debugging, while trying to find the cause
#  of a context error. On Windows, a breakpoint exception is generated.
#trap-al-error = false

##
## Ambisonic decoder stuff
##
[decoder]

## hq-mode:
#  Enables a high-quality ambisonic decoder. This mode is capable of frequency-
#  dependent processing, creating a better reproduction of 3D sound rendering
#  over surround sound speakers. Enabling this also requires specifying decoder
#  configuration files for the appropriate speaker configuration you intend to
#  use (see the quad, surround51, etc options below). Currently, up to third-
#  order decoding is supported.
#hq-mode = true

## distance-comp:
#  Enables compensation for the speakers' relative distances to the listener.
#  This applies the necessary delays and attenuation to make the speakers
#  behave as though they are all equidistant, which is important for proper
#  playback of 3D sound rendering. Requires the proper distances to be
#  specified in the decoder configuration file.
#distance-comp = true

## nfc:
#  Enables near-field control filters. This simulates and compensates for low-
#  frequency effects caused by the curvature of nearby sound-waves, which
#  creates a more realistic perception of sound distance. Note that the effect
#  may be stronger or weaker than intended if the application doesn't use or
#  specify an appropriate unit scale, or if incorrect speaker distances are set
#  in the decoder configuration file.
#nfc = false

## nfc-ref-delay
#  Specifies the reference delay value for ambisonic output when NFC filters
#  are enabled. If channels is set to one of the ambi* formats, this option
#  enables NFC-HOA output with the specified Reference Delay parameter. The
#  specified value can then be shared with an appropriate NFC-HOA decoder to
#  reproduce correct near-field effects. Keep in mind that despite being
#  designed for higher-order ambisonics, this also applies to first-order
#  output. When left unset, normal output is created with no near-field
#  simulation. Requires the nfc option to also be enabled.
#nfc-ref-delay =

## quad:
#  Decoder configuration file for Quadraphonic channel output. See
#  docs/ambdec.txt for a description of the file format.
#quad =

## surround51:
#  Decoder configuration file for 5.1 Surround (Side and Rear) channel output.
#  See docs/ambdec.txt for a description of the file format.
#surround51 =

## surround61:
#  Decoder configuration file for 6.1 Surround channel output. See
#  docs/ambdec.txt for a description of the file format.
#surround61 =

## surround71:
#  Decoder configuration file for 7.1 Surround channel output. See
#  docs/ambdec.txt for a description of the file format. Note: This can be used
#  to enable 3D7.1 with the appropriate configuration and speaker placement,
#  see docs/3D7.1.txt.
#surround71 =

##
## Reverb effect stuff (includes EAX reverb)
##
[reverb]

## boost: (global)
#  A global amplification for reverb output, expressed in decibels. The value
#  is logarithmic, so +6 will be a scale of (approximately) 2x, +12 will be a
#  scale of 4x, etc. Similarly, -6 will be about half, and -12 about 1/4th. A
#  value of 0 means no change.
#boost = 0
